------------------------------------------------------------
          Invoking FHI-aims ...

          When using FHI-aims, please cite the following reference:

            Volker Blum, Ralf Gehrke, Felix Hanke, Paula Havu,
            Ville Havu, Xinguo Ren, Karsten Reuter, and Matthias Scheffler,
            'Ab Initio Molecular Simulations with Numeric Atom-Centered Orbitals',
            Computer Physics Communications 180, 2175-2196 (2009)

          In addition, many other developments in FHI-aims are likely important for
          your particular application. A partial list of references is given at the end of
          this file. Thank you for giving credit to the authors of these developments.

          For any questions about FHI-aims, please visit our slack channel at

            https://fhi-aims.slack.com

          and our main development and support site at

            https://aims-git.rz-berlin.mpg.de .

          The latter site, in particular, has a wiki to collect information, as well
          as an issue tracker to log discussions, suggest improvements, and report issues
          or bugs. https://aims-git.rz-berlin.mpg.de is also the main development site
          of the project and all new and updated code versions can be obtained there.
          Please send an email to aims-coordinators@fhi-berlin.mpg.de and we will add
          you to these sites. They are for you and everyone is welcome there.

------------------------------------------------------------



  Date     :  20210707, Time     :  091429.890
  Time zero on CPU 1             :   0.252149000000000E+00  s.
  Internal wall clock time zero  :           394881269.890  s.

  FHI-aims created a unique identifier for this run for later identification
  aims_uuid : FACBDFD7-983B-40FA-AA0B-7248A4A6B957

  Build configuration of the current instance of FHI-aims
  -------------------------------------------------------
  FHI-aims version      : 210413
  Commit number         : e4873593e
  CMake host system     : Linux-4.12.14-122.57-default
  CMake version         : 3.5.2
  Fortran compiler      : /mpcdf/soft/SLE_12/packages/x86_64/intel_parallel_studio/2020.1/compilers_and_libraries_2020.1.217/linux/mpi/intel64/bin/mpiifort (Intel) version 19.1.0.20200306
  Fortran compiler flags: -O3 -ip -fp-model precise
  C compiler            : /mpcdf/soft/SLE_12/packages/x86_64/intel/19.1.1/bin/icc (Intel) version 19.1.0.20200306
  C compiler flags      : -O3 -ip -fp-model precise -std=gnu99
  C++ compiler          : /mpcdf/soft/SLE_12/packages/x86_64/intel/19.1.1/bin/icpc (Intel) version 19.1.0.20200306
  C++ compiler flags    : -O3 -ip -fp-model precise -std=gnu99
  Using MPI
  Using ScaLAPACK
  Using LibXC
  Using i-PI
  Using RLSY
  Linking against: /mpcdf/soft/SLE_12/packages/x86_64/intel_parallel_studio/2020.1/mkl/lib/intel64/libmkl_intel_lp64.so
                   /mpcdf/soft/SLE_12/packages/x86_64/intel_parallel_studio/2020.1/mkl/lib/intel64/libmkl_sequential.so
                   /mpcdf/soft/SLE_12/packages/x86_64/intel_parallel_studio/2020.1/mkl/lib/intel64/libmkl_core.so
                   /mpcdf/soft/SLE_12/packages/x86_64/intel_parallel_studio/2020.1/mkl/lib/intel64/libmkl_blacs_intelmpi_lp64.so
                   /mpcdf/soft/SLE_12/packages/x86_64/intel_parallel_studio/2020.1/mkl/lib/intel64/libmkl_scalapack_lp64.so

  Using      160 parallel tasks.
  Task        0 on host co2577 reporting.
  Task        1 on host co2577 reporting.
  Task        2 on host co2577 reporting.
  Task        3 on host co2577 reporting.
  Task        4 on host co2577 reporting.
  Task        5 on host co2577 reporting.
  Task        6 on host co2577 reporting.
  Task        7 on host co2577 reporting.
  Task        8 on host co2577 reporting.
  Task        9 on host co2577 reporting.
  Task       10 on host co2577 reporting.
  Task       11 on host co2577 reporting.
  Task       12 on host co2577 reporting.
  Task       13 on host co2577 reporting.
  Task       14 on host co2577 reporting.
  Task       15 on host co2577 reporting.
  Task       16 on host co2577 reporting.
  Task       17 on host co2577 reporting.
  Task       18 on host co2577 reporting.
  Task       19 on host co2577 reporting.
  Task       20 on host co2577 reporting.
  Task       21 on host co2577 reporting.
  Task       22 on host co2577 reporting.
  Task       23 on host co2577 reporting.
  Task       24 on host co2577 reporting.
  Task       25 on host co2577 reporting.
  Task       26 on host co2577 reporting.
  Task       27 on host co2577 reporting.
  Task       28 on host co2577 reporting.
  Task       29 on host co2577 reporting.
  Task       30 on host co2577 reporting.
  Task       31 on host co2577 reporting.
  Task       32 on host co2577 reporting.
  Task       33 on host co2577 reporting.
  Task       34 on host co2577 reporting.
  Task       35 on host co2577 reporting.
  Task       36 on host co2577 reporting.
  Task       37 on host co2577 reporting.
  Task       38 on host co2577 reporting.
  Task       39 on host co2577 reporting.
  Task       40 on host co2578 reporting.
  Task       41 on host co2578 reporting.
  Task       42 on host co2578 reporting.
  Task       43 on host co2578 reporting.
  Task       44 on host co2578 reporting.
  Task       45 on host co2578 reporting.
  Task       46 on host co2578 reporting.
  Task       47 on host co2578 reporting.
  Task       48 on host co2578 reporting.
  Task       49 on host co2578 reporting.
  Task       50 on host co2578 reporting.
  Task       51 on host co2578 reporting.
  Task       52 on host co2578 reporting.
  Task       53 on host co2578 reporting.
  Task       54 on host co2578 reporting.
  Task       55 on host co2578 reporting.
  Task       56 on host co2578 reporting.
  Task       57 on host co2578 reporting.
  Task       58 on host co2578 reporting.
  Task       59 on host co2578 reporting.
  Task       60 on host co2578 reporting.
  Task       61 on host co2578 reporting.
  Task       62 on host co2578 reporting.
  Task       63 on host co2578 reporting.
  Task       64 on host co2578 reporting.
  Task       65 on host co2578 reporting.
  Task       66 on host co2578 reporting.
  Task       67 on host co2578 reporting.
  Task       68 on host co2578 reporting.
  Task       69 on host co2578 reporting.
  Task       70 on host co2578 reporting.
  Task       71 on host co2578 reporting.
  Task       72 on host co2578 reporting.
  Task       73 on host co2578 reporting.
  Task       74 on host co2578 reporting.
  Task       75 on host co2578 reporting.
  Task       76 on host co2578 reporting.
  Task       77 on host co2578 reporting.
  Task       78 on host co2578 reporting.
  Task       79 on host co2578 reporting.
  Task       80 on host co2579 reporting.
  Task       81 on host co2579 reporting.
  Task       82 on host co2579 reporting.
  Task       83 on host co2579 reporting.
  Task       84 on host co2579 reporting.
  Task       85 on host co2579 reporting.
  Task       86 on host co2579 reporting.
  Task       87 on host co2579 reporting.
  Task       88 on host co2579 reporting.
  Task       89 on host co2579 reporting.
  Task       90 on host co2579 reporting.
  Task       91 on host co2579 reporting.
  Task       92 on host co2579 reporting.
  Task       93 on host co2579 reporting.
  Task       94 on host co2579 reporting.
  Task       95 on host co2579 reporting.
  Task       96 on host co2579 reporting.
  Task       97 on host co2579 reporting.
  Task       98 on host co2579 reporting.
  Task       99 on host co2579 reporting.
  Task      100 on host co2579 reporting.
  Task      101 on host co2579 reporting.
  Task      102 on host co2579 reporting.
  Task      103 on host co2579 reporting.
  Task      104 on host co2579 reporting.
  Task      105 on host co2579 reporting.
  Task      106 on host co2579 reporting.
  Task      107 on host co2579 reporting.
  Task      108 on host co2579 reporting.
  Task      109 on host co2579 reporting.
  Task      110 on host co2579 reporting.
  Task      111 on host co2579 reporting.
  Task      112 on host co2579 reporting.
  Task      113 on host co2579 reporting.
  Task      114 on host co2579 reporting.
  Task      115 on host co2579 reporting.
  Task      116 on host co2579 reporting.
  Task      117 on host co2579 reporting.
  Task      118 on host co2579 reporting.
  Task      119 on host co2579 reporting.
  Task      120 on host co2580 reporting.
  Task      121 on host co2580 reporting.
  Task      122 on host co2580 reporting.
  Task      123 on host co2580 reporting.
  Task      124 on host co2580 reporting.
  Task      125 on host co2580 reporting.
  Task      126 on host co2580 reporting.
  Task      127 on host co2580 reporting.
  Task      128 on host co2580 reporting.
  Task      129 on host co2580 reporting.
  Task      130 on host co2580 reporting.
  Task      131 on host co2580 reporting.
  Task      132 on host co2580 reporting.
  Task      133 on host co2580 reporting.
  Task      134 on host co2580 reporting.
  Task      135 on host co2580 reporting.
  Task      136 on host co2580 reporting.
  Task      137 on host co2580 reporting.
  Task      138 on host co2580 reporting.
  Task      139 on host co2580 reporting.
  Task      140 on host co2580 reporting.
  Task      141 on host co2580 reporting.
  Task      142 on host co2580 reporting.
  Task      143 on host co2580 reporting.
  Task      144 on host co2580 reporting.
  Task      145 on host co2580 reporting.
  Task      146 on host co2580 reporting.
  Task      147 on host co2580 reporting.
  Task      148 on host co2580 reporting.
  Task      149 on host co2580 reporting.
  Task      150 on host co2580 reporting.
  Task      151 on host co2580 reporting.
  Task      152 on host co2580 reporting.
  Task      153 on host co2580 reporting.
  Task      154 on host co2580 reporting.
  Task      155 on host co2580 reporting.
  Task      156 on host co2580 reporting.
  Task      157 on host co2580 reporting.
  Task      158 on host co2580 reporting.
  Task      159 on host co2580 reporting.

  Performing system and environment tests:
  | Environment variable OMP_NUM_THREADS correctly set to 1.
  | Checking for ScaLAPACK...
  | Testing pdtran()...
  | All pdtran() tests passed.

  Obtaining array dimensions for all initial allocations:
  
  -----------------------------------------------------------------------
  Parsing control.in (first pass over file, find array dimensions only).
  The contents of control.in will be repeated verbatim below
  unless switched off by setting 'verbatim_writeout .false.' .
  in the first line of control.in .
  -----------------------------------------------------------------------
  
  #===============================================================================
  # FHI-aims file: ./control.in
  # Created using the Atomic Simulation Environment (ASE)
  # Wed Jul  7 09:14:26 2021
  #===============================================================================
  xc                                 pbe
  k_grid                             8 8 8
  sc_accuracy_rho                    1e-06
  relativistic                       atomic_zora scalar
  output_level                       MD_light
  compute_forces                     .true.
  use_pimd_wrapper                   localhost 12346
  #===============================================================================
  
  ################################################################################
  #
  #  FHI-aims code project
  # Volker Blum, Fritz Haber Institute Berlin, 2009
  #
  #  Suggested "tight" defaults for Mo atom (to be pasted into control.in file)
  #
  ################################################################################
    species        Mo
  #     global species definitions
      nucleus             42
      mass                95.94
  #
      l_hartree           6
  #
      cut_pot             4.0  2.0  1.0
      basis_dep_cutoff    1e-4
  #
      radial_base         59 7.0
      radial_multiplier   2
      angular_grids specified
        division   0.3117   50
        division   0.6750  110
        division   1.0351  194
        division   1.2073  302
        division   1.6402  434
  #      division   1.9185  590
  #      division   2.0237  770
  #      division   2.0980  974
  #      division   2.7972 1202
  #      outer_grid  974
        outer_grid  434
  ################################################################################
  #
  #  Definition of "minimal" basis
  #
  ################################################################################
  #     valence basis states
      valence      5  s   1.
      valence      4  p   6.
      valence      4  d   5.
  #     ion occupancy
      ion_occ     5  s   0.
      ion_occ     4  p   6.
      ion_occ     4  d   4.
  ################################################################################
  #
  #  Suggested additional basis functions. For production calculations,
  #  uncomment them one after another (the most important basis functions are
  #  listed first).
  #
  #  Constructed for dimers: 1.675 A, 1.9 A, 2.375 A, 3.00 A, 4.00 A
  #
  ################################################################################
  #  "First tier"  - max. impr. -711.23  meV, min. impr. -21.07 meV
       hydro 4 f 8.4
       hydro 3 d 2.8
       ionic 5 p auto
       hydro 5 g 12
       ionic 5 s auto
  #  "Second tier" - max. impr. -39.38  meV, min. impr. -2.68 meV
  #     hydro 4 f 12.4
  #     hydro 3 d 3.3
  #     hydro 6 h 17.2
  #     hydro 4 f 7.6
  #     hydro 3 p 3.0
  #     hydro 1 s 0.65
  #  "Third tier"  - max. impr. -5.50 meV, min. impr. -0.47 meV
  #     hydro 4 f 29.2
  #     hydro 5 g 11.2
  #     hydro 3 d 6.8
  #     hydro 6 h 14.8
  #     hydro 2 p 2.3
  #     hydro 4 s 3.8
  #  "Fourth tier"  - max. impr. -0.58 meV, min. impr. -0.19 meV
  #     hydro 5 f 6.8
  #     hydro 5 d 14.8
  #     hydro 6 s 7.8
  #     hydro 5 g 20.8
  #     hydro 5 d 10.4
  #     hydro 5 p 9.8
  #  Further functions - -0.17 meV and below
  #     hydro 5 d 3.2
  
  -----------------------------------------------------------------------
  Completed first pass over input file control.in .
  -----------------------------------------------------------------------
  
  
  -----------------------------------------------------------------------
  Parsing geometry.in (first pass over file, find array dimensions only).
  The contents of geometry.in will be repeated verbatim below
  unless switched off by setting 'verbatim_writeout .false.' .
  in the first line of geometry.in .
  -----------------------------------------------------------------------
  
  #=======================================================
  # FHI-aims file: ./geometry.in
  # Created using the Atomic Simulation Environment (ASE)
  # Wed Jul  7 09:14:26 2021
  #=======================================================
  lattice_vector 3.0823436599999998 0.0000000000000000 0.0000000000000000
  lattice_vector 0.0000000000000000 3.0823436599999998 0.0000000000000000
  lattice_vector 0.0000000000000000 0.0000000000000000 3.0823436599999998
  atom_frac 0.0032442845779241 0.0000000000000000 0.0000000000000000 Mo
  atom_frac 0.4999999999999998 0.4999999999999998 0.4999999999999998 Mo
  
  -----------------------------------------------------------------------
  Completed first pass over input file geometry.in .
  -----------------------------------------------------------------------
  

  Basic array size parameters:
  | Number of species                 :        1
  | Number of atoms                   :        2
  | Number of lattice vectors         :        3
  | Max. basis fn. angular momentum   :        4
  | Max. atomic/ionic basis occupied n:        5
  | Max. number of basis fn. types    :        3
  | Max. radial fns per species/type  :       10
  | Max. logarithmic grid size        :     1436
  | Max. radial integration grid size :      119
  | Max. angular integration grid size:      434
  | Max. angular grid division number :        8
  | Radial grid for Hartree potential :     1436
  | Number of spin channels           :        1

------------------------------------------------------------
          Reading file control.in.
------------------------------------------------------------
  XC: Using PBE gradient-corrected functionals.
  Found k-point grid:         8         8         8
  Convergence accuracy of self-consistent charge density:  0.1000E-05
  Scalar relativistic treatment of kinetic energy: on-site free-atom approximation to ZORA.
  Requested output level: MD_light
  Forces will be computed.
  Using external wrapper (i-PI) for performing (path integral) molecular dynamics
  **Attention: initial geometry.in file will be ignored!
 
  Reading configuration options for species Mo                  .
  | Found nuclear charge :  42.0000
  | Found atomic mass :    95.9400000000000      amu
  | Found l_max for Hartree potential  :   6
  | Found cutoff potl. onset [A], width [A], scale factor :    4.00000    2.00000    1.00000
  | Threshold for basis-dependent cutoff potential is   0.100000E-03
  | Found data for basic radial integration grid :    59 points, outermost radius =    7.000 A
  | Found multiplier for basic radial grid :   2
  | Found angular grid specification: user-specified.
  | Specified grid contains     6 separate shells.
  | Check grid settings after all constraints further below.
  | Found free-atom valence shell :  5 s   1.000
  | Found free-atom valence shell :  4 p   6.000
  | Found free-atom valence shell :  4 d   5.000
  | Found free-ion valence shell :  5 s   0.000
  | Found free-ion valence shell :  4 p   6.000
  | Found free-ion valence shell :  4 d   4.000
  | Found hydrogenic basis function :  4 f   8.400
  | Found hydrogenic basis function :  3 d   2.800
  | Found ionic basis function :  5 p , default cutoff radius.
  | Found hydrogenic basis function :  5 g  12.000
  | Found ionic basis function :  5 s , default cutoff radius.
  Species Mo                  : Missing cutoff potential type.
  Defaulting to exp(1/x)/(1-x)^2 type cutoff potential.
  Species Mo: No 'logarithmic' tag. Using default grid for free atom:
  | Default logarithmic grid data [bohr] : 0.1000E-03 0.1000E+03 0.1012E+01
  | Will include ionic basis functions of  2.0-fold positive Mo                   ion.
  Species Mo: On-site basis accuracy parameter (for Gram-Schmidt orthonormalisation) not specified.
  Using default value basis_acc =  0.1000000E-03.
  Species Mo                  : Using default innermost maximum threshold i_radial=  2 for radial functions.
  Species Mo                  : Default cutoff onset for free atom density etc. : 0.40000000E+01 AA.
  Species Mo                  : Basic radial grid will be enhanced according to radial_multiplier =   2, to contain   119 grid points.
 
  Finished reading input file 'control.in'.
 
------------------------------------------------------------


------------------------------------------------------------
          Reading geometry description geometry.in.
------------------------------------------------------------
  | The smallest distance between any two atoms is         2.66362692 AA.
  | The first atom of this pair is atom number                      1 .
  | The second atom of this pair is atom number                     2 .
  | Wigner-Seitz cell of the first atom image           0     0     0 .
  | (The Wigner-Seitz cell of the second atom is 0 0 0  by definition.)

  Symmetry information by spglib:
  | Precision set to  0.1E-04
  | Number of Operations  : 16
  | Space group           : 129
  | International         : P4/nmm
  | Schoenflies           : D4h^7
  Input structure read successfully.
  The structure contains        2 atoms,  and a total of         84.000 electrons.

  Input geometry:
  | Unit cell:
  |        3.08234366        0.00000000        0.00000000
  |        0.00000000        3.08234366        0.00000000
  |        0.00000000        0.00000000        3.08234366
  | Atomic structure:
  |       Atom                x [A]            y [A]            z [A]
  |    1: Species Mo            0.01000000        0.00000000        0.00000000
  |    2: Species Mo            1.54117183        1.54117183        1.54117183

  Lattice parameters for 3D lattice (in Angstroms) :     3.082344    3.082344    3.082344
  Angle(s) between unit vectors (in degrees)       :    90.000000   90.000000   90.000000


  Quantities derived from the lattice vectors:
  | Reciprocal lattice vector 1:  2.038444  0.000000  0.000000
  | Reciprocal lattice vector 2:  0.000000  2.038444  0.000000
  | Reciprocal lattice vector 3:  0.000000  0.000000  2.038444
  | Unit cell volume                               :   0.292849E+02  A^3

 
  Finished reading input file 'control.in'.
 

------------------------------------------------------------
          Reading geometry description geometry.in.
------------------------------------------------------------
 
  Consistency checks for stacksize environment parameter are next.
 
  | Maximum stacksize for task 0: unlimited
  | Maximum stacksize for task 1: unlimited
  | Maximum stacksize for task 2: unlimited
  | Maximum stacksize for task 3: unlimited
  | Maximum stacksize for task 4: unlimited
  | Maximum stacksize for task 5: unlimited
  | Maximum stacksize for task 6: unlimited
  | Maximum stacksize for task 7: unlimited
  | Maximum stacksize for task 8: unlimited
  | Maximum stacksize for task 9: unlimited
  | Maximum stacksize for task 10: unlimited
  | Maximum stacksize for task 11: unlimited
  | Maximum stacksize for task 12: unlimited
  | Maximum stacksize for task 13: unlimited
  | Maximum stacksize for task 14: unlimited
  | Maximum stacksize for task 15: unlimited
  | Maximum stacksize for task 16: unlimited
  | Maximum stacksize for task 17: unlimited
  | Maximum stacksize for task 18: unlimited
  | Maximum stacksize for task 19: unlimited
  | Maximum stacksize for task 20: unlimited
  | Maximum stacksize for task 21: unlimited
  | Maximum stacksize for task 22: unlimited
  | Maximum stacksize for task 23: unlimited
  | Maximum stacksize for task 24: unlimited
  | Maximum stacksize for task 25: unlimited
  | Maximum stacksize for task 26: unlimited
  | Maximum stacksize for task 27: unlimited
  | Maximum stacksize for task 28: unlimited
  | Maximum stacksize for task 29: unlimited
  | Maximum stacksize for task 30: unlimited
  | Maximum stacksize for task 31: unlimited
  | Maximum stacksize for task 32: unlimited
  | Maximum stacksize for task 33: unlimited
  | Maximum stacksize for task 34: unlimited
  | Maximum stacksize for task 35: unlimited
  | Maximum stacksize for task 36: unlimited
  | Maximum stacksize for task 37: unlimited
  | Maximum stacksize for task 38: unlimited
  | Maximum stacksize for task 39: unlimited
  | Maximum stacksize for task 40: unlimited
  | Maximum stacksize for task 41: unlimited
  | Maximum stacksize for task 42: unlimited
  | Maximum stacksize for task 43: unlimited
  | Maximum stacksize for task 44: unlimited
  | Maximum stacksize for task 45: unlimited
  | Maximum stacksize for task 46: unlimited
  | Maximum stacksize for task 47: unlimited
  | Maximum stacksize for task 48: unlimited
  | Maximum stacksize for task 49: unlimited
  | Maximum stacksize for task 50: unlimited
  | Maximum stacksize for task 51: unlimited
  | Maximum stacksize for task 52: unlimited
  | Maximum stacksize for task 53: unlimited
  | Maximum stacksize for task 54: unlimited
  | Maximum stacksize for task 55: unlimited
  | Maximum stacksize for task 56: unlimited
  | Maximum stacksize for task 57: unlimited
  | Maximum stacksize for task 58: unlimited
  | Maximum stacksize for task 59: unlimited
  | Maximum stacksize for task 60: unlimited
  | Maximum stacksize for task 61: unlimited
  | Maximum stacksize for task 62: unlimited
  | Maximum stacksize for task 63: unlimited
  | Maximum stacksize for task 64: unlimited
  | Maximum stacksize for task 65: unlimited
  | Maximum stacksize for task 66: unlimited
  | Maximum stacksize for task 67: unlimited
  | Maximum stacksize for task 68: unlimited
  | Maximum stacksize for task 69: unlimited
  | Maximum stacksize for task 70: unlimited
  | Maximum stacksize for task 71: unlimited
  | Maximum stacksize for task 72: unlimited
  | Maximum stacksize for task 73: unlimited
  | Maximum stacksize for task 74: unlimited
  | Maximum stacksize for task 75: unlimited
  | Maximum stacksize for task 76: unlimited
  | Maximum stacksize for task 77: unlimited
  | Maximum stacksize for task 78: unlimited
  | Maximum stacksize for task 79: unlimited
  | Maximum stacksize for task 80: unlimited
  | Maximum stacksize for task 81: unlimited
  | Maximum stacksize for task 82: unlimited
  | Maximum stacksize for task 83: unlimited
  | Maximum stacksize for task 84: unlimited
  | Maximum stacksize for task 85: unlimited
  | Maximum stacksize for task 86: unlimited
  | Maximum stacksize for task 87: unlimited
  | Maximum stacksize for task 88: unlimited
  | Maximum stacksize for task 89: unlimited
  | Maximum stacksize for task 90: unlimited
  | Maximum stacksize for task 91: unlimited
  | Maximum stacksize for task 92: unlimited
  | Maximum stacksize for task 93: unlimited
  | Maximum stacksize for task 94: unlimited
  | Maximum stacksize for task 95: unlimited
  | Maximum stacksize for task 96: unlimited
  | Maximum stacksize for task 97: unlimited
  | Maximum stacksize for task 98: unlimited
  | Maximum stacksize for task 99: unlimited
  | Maximum stacksize for task 100: unlimited
  | Maximum stacksize for task 101: unlimited
  | Maximum stacksize for task 102: unlimited
  | Maximum stacksize for task 103: unlimited
  | Maximum stacksize for task 104: unlimited
  | Maximum stacksize for task 105: unlimited
  | Maximum stacksize for task 106: unlimited
  | Maximum stacksize for task 107: unlimited
  | Maximum stacksize for task 108: unlimited
  | Maximum stacksize for task 109: unlimited
  | Maximum stacksize for task 110: unlimited
  | Maximum stacksize for task 111: unlimited
  | Maximum stacksize for task 112: unlimited
  | Maximum stacksize for task 113: unlimited
  | Maximum stacksize for task 114: unlimited
  | Maximum stacksize for task 115: unlimited
  | Maximum stacksize for task 116: unlimited
  | Maximum stacksize for task 117: unlimited
  | Maximum stacksize for task 118: unlimited
  | Maximum stacksize for task 119: unlimited
  | Maximum stacksize for task 120: unlimited
  | Maximum stacksize for task 121: unlimited
  | Maximum stacksize for task 122: unlimited
  | Maximum stacksize for task 123: unlimited
  | Maximum stacksize for task 124: unlimited
  | Maximum stacksize for task 125: unlimited
  | Maximum stacksize for task 126: unlimited
  | Maximum stacksize for task 127: unlimited
  | Maximum stacksize for task 128: unlimited
  | Maximum stacksize for task 129: unlimited
  | Maximum stacksize for task 130: unlimited
  | Maximum stacksize for task 131: unlimited
  | Maximum stacksize for task 132: unlimited
  | Maximum stacksize for task 133: unlimited
  | Maximum stacksize for task 134: unlimited
  | Maximum stacksize for task 135: unlimited
  | Maximum stacksize for task 136: unlimited
  | Maximum stacksize for task 137: unlimited
  | Maximum stacksize for task 138: unlimited
  | Maximum stacksize for task 139: unlimited
  | Maximum stacksize for task 140: unlimited
  | Maximum stacksize for task 141: unlimited
  | Maximum stacksize for task 142: unlimited
  | Maximum stacksize for task 143: unlimited
  | Maximum stacksize for task 144: unlimited
  | Maximum stacksize for task 145: unlimited
  | Maximum stacksize for task 146: unlimited
  | Maximum stacksize for task 147: unlimited
  | Maximum stacksize for task 148: unlimited
  | Maximum stacksize for task 149: unlimited
  | Maximum stacksize for task 150: unlimited
  | Maximum stacksize for task 151: unlimited
  | Maximum stacksize for task 152: unlimited
  | Maximum stacksize for task 153: unlimited
  | Maximum stacksize for task 154: unlimited
  | Maximum stacksize for task 155: unlimited
  | Maximum stacksize for task 156: unlimited
  | Maximum stacksize for task 157: unlimited
  | Maximum stacksize for task 158: unlimited
  | Maximum stacksize for task 159: unlimited
  | Current stacksize for task 0: unlimited
  | Current stacksize for task 1: unlimited
  | Current stacksize for task 2: unlimited
  | Current stacksize for task 3: unlimited
  | Current stacksize for task 4: unlimited
  | Current stacksize for task 5: unlimited
  | Current stacksize for task 6: unlimited
  | Current stacksize for task 7: unlimited
  | Current stacksize for task 8: unlimited
  | Current stacksize for task 9: unlimited
  | Current stacksize for task 10: unlimited
  | Current stacksize for task 11: unlimited
  | Current stacksize for task 12: unlimited
  | Current stacksize for task 13: unlimited
  | Current stacksize for task 14: unlimited
  | Current stacksize for task 15: unlimited
  | Current stacksize for task 16: unlimited
  | Current stacksize for task 17: unlimited
  | Current stacksize for task 18: unlimited
  | Current stacksize for task 19: unlimited
  | Current stacksize for task 20: unlimited
  | Current stacksize for task 21: unlimited
  | Current stacksize for task 22: unlimited
  | Current stacksize for task 23: unlimited
  | Current stacksize for task 24: unlimited
  | Current stacksize for task 25: unlimited
  | Current stacksize for task 26: unlimited
  | Current stacksize for task 27: unlimited
  | Current stacksize for task 28: unlimited
  | Current stacksize for task 29: unlimited
  | Current stacksize for task 30: unlimited
  | Current stacksize for task 31: unlimited
  | Current stacksize for task 32: unlimited
  | Current stacksize for task 33: unlimited
  | Current stacksize for task 34: unlimited
  | Current stacksize for task 35: unlimited
  | Current stacksize for task 36: unlimited
  | Current stacksize for task 37: unlimited
  | Current stacksize for task 38: unlimited
  | Current stacksize for task 39: unlimited
  | Current stacksize for task 40: unlimited
  | Current stacksize for task 41: unlimited
  | Current stacksize for task 42: unlimited
  | Current stacksize for task 43: unlimited
  | Current stacksize for task 44: unlimited
  | Current stacksize for task 45: unlimited
  | Current stacksize for task 46: unlimited
  | Current stacksize for task 47: unlimited
  | Current stacksize for task 48: unlimited
  | Current stacksize for task 49: unlimited
  | Current stacksize for task 50: unlimited
  | Current stacksize for task 51: unlimited
  | Current stacksize for task 52: unlimited
  | Current stacksize for task 53: unlimited
  | Current stacksize for task 54: unlimited
  | Current stacksize for task 55: unlimited
  | Current stacksize for task 56: unlimited
  | Current stacksize for task 57: unlimited
  | Current stacksize for task 58: unlimited
  | Current stacksize for task 59: unlimited
  | Current stacksize for task 60: unlimited
  | Current stacksize for task 61: unlimited
  | Current stacksize for task 62: unlimited
  | Current stacksize for task 63: unlimited
  | Current stacksize for task 64: unlimited
  | Current stacksize for task 65: unlimited
  | Current stacksize for task 66: unlimited
  | Current stacksize for task 67: unlimited
  | Current stacksize for task 68: unlimited
  | Current stacksize for task 69: unlimited
  | Current stacksize for task 70: unlimited
  | Current stacksize for task 71: unlimited
  | Current stacksize for task 72: unlimited
  | Current stacksize for task 73: unlimited
  | Current stacksize for task 74: unlimited
  | Current stacksize for task 75: unlimited
  | Current stacksize for task 76: unlimited
  | Current stacksize for task 77: unlimited
  | Current stacksize for task 78: unlimited
  | Current stacksize for task 79: unlimited
  | Current stacksize for task 80: unlimited
  | Current stacksize for task 81: unlimited
  | Current stacksize for task 82: unlimited
  | Current stacksize for task 83: unlimited
  | Current stacksize for task 84: unlimited
  | Current stacksize for task 85: unlimited
  | Current stacksize for task 86: unlimited
  | Current stacksize for task 87: unlimited
  | Current stacksize for task 88: unlimited
  | Current stacksize for task 89: unlimited
  | Current stacksize for task 90: unlimited
  | Current stacksize for task 91: unlimited
  | Current stacksize for task 92: unlimited
  | Current stacksize for task 93: unlimited
  | Current stacksize for task 94: unlimited
  | Current stacksize for task 95: unlimited
  | Current stacksize for task 96: unlimited
  | Current stacksize for task 97: unlimited
  | Current stacksize for task 98: unlimited
  | Current stacksize for task 99: unlimited
  | Current stacksize for task 100: unlimited
  | Current stacksize for task 101: unlimited
  | Current stacksize for task 102: unlimited
  | Current stacksize for task 103: unlimited
  | Current stacksize for task 104: unlimited
  | Current stacksize for task 105: unlimited
  | Current stacksize for task 106: unlimited
  | Current stacksize for task 107: unlimited
  | Current stacksize for task 108: unlimited
  | Current stacksize for task 109: unlimited
  | Current stacksize for task 110: unlimited
  | Current stacksize for task 111: unlimited
  | Current stacksize for task 112: unlimited
  | Current stacksize for task 113: unlimited
  | Current stacksize for task 114: unlimited
  | Current stacksize for task 115: unlimited
  | Current stacksize for task 116: unlimited
  | Current stacksize for task 117: unlimited
  | Current stacksize for task 118: unlimited
  | Current stacksize for task 119: unlimited
  | Current stacksize for task 120: unlimited
  | Current stacksize for task 121: unlimited
  | Current stacksize for task 122: unlimited
  | Current stacksize for task 123: unlimited
  | Current stacksize for task 124: unlimited
  | Current stacksize for task 125: unlimited
  | Current stacksize for task 126: unlimited
  | Current stacksize for task 127: unlimited
  | Current stacksize for task 128: unlimited
  | Current stacksize for task 129: unlimited
  | Current stacksize for task 130: unlimited
  | Current stacksize for task 131: unlimited
  | Current stacksize for task 132: unlimited
  | Current stacksize for task 133: unlimited
  | Current stacksize for task 134: unlimited
  | Current stacksize for task 135: unlimited
  | Current stacksize for task 136: unlimited
  | Current stacksize for task 137: unlimited
  | Current stacksize for task 138: unlimited
  | Current stacksize for task 139: unlimited
  | Current stacksize for task 140: unlimited
  | Current stacksize for task 141: unlimited
  | Current stacksize for task 142: unlimited
  | Current stacksize for task 143: unlimited
  | Current stacksize for task 144: unlimited
  | Current stacksize for task 145: unlimited
  | Current stacksize for task 146: unlimited
  | Current stacksize for task 147: unlimited
  | Current stacksize for task 148: unlimited
  | Current stacksize for task 149: unlimited
  | Current stacksize for task 150: unlimited
  | Current stacksize for task 151: unlimited
  | Current stacksize for task 152: unlimited
  | Current stacksize for task 153: unlimited
  | Current stacksize for task 154: unlimited
  | Current stacksize for task 155: unlimited
  | Current stacksize for task 156: unlimited
  | Current stacksize for task 157: unlimited
  | Current stacksize for task 158: unlimited
  | Current stacksize for task 159: unlimited
 
  Consistency checks for the contents of control.in are next.
 
  MPI_IN_PLACE appears to work with this MPI implementation.
  | Keeping use_mpi_in_place .true. (see manual).
  Target number of points in a grid batch is not set. Defaulting to  100
  Method for grid partitioning is not set. Defaulting to parallel hash+maxmin partitioning.
  Batch size limit is not set. Defaulting to    200
  By default, will store active basis functions for each batch.
  If in need of memory, prune_basis_once .false. can be used to disable this option.
  communication_type for Hartree potential was not specified.
  Defaulting to calc_hartree .
  Defaulting to Pulay charge density mixer.
  Pulay mixer: Number of relevant iterations not set.
  Defaulting to    8 iterations.
  Pulay mixer: Number of initial linear mixing iterations not set.
  Defaulting to    0 iterations.
  Work space size for distributed Hartree potential not set.
  Defaulting to   0.200000E+03 MB.
  Mixing parameter for charge density mixing has not been set.
  Using default: charge_mix_param =     0.0500.
  The mixing parameter will be adjusted in iteration number     2 of the first full s.c.f. cycle only.
  Algorithm-dependent basis array size parameters:
  | n_max_pulay                         :        8
  Maximum number of self-consistency iterations not provided.
  Presetting  1000 iterations.
  Presetting      1001 iterations before the initial mixing cycle
  is restarted anyway using the sc_init_iter criterion / keyword.
  Presetting a factor      1.000 between actual scf density residual
  and density convergence criterion sc_accuracy_rho below which sc_init_iter
  takes no effect.
  Geometry relaxation not requested: no relaxation will be performed.
  Force calculation: scf convergence accuracy of forces not set.
  Defaulting to 'sc_accuracy_forces not_checked'.
  Handling of forces: Unphysical translation and rotation will be removed from forces.
  No accuracy limit for integral partition fn. given. Defaulting to  0.1000E-14.
  No threshold value for u(r) in integrations given. Defaulting to  0.1000E-05.
  No occupation type (smearing scheme) given. Defaulting to Gaussian broadening, width =  0.1000E-01 eV.
  The width will be adjusted in iteration number     2 of the first full s.c.f. cycle only.
  S.C.F. convergence parameters will be adjusted in iteration number     2 of the first full s.c.f. cycle only.
  No accuracy for occupation numbers given. Defaulting to  0.1000E-12.
  No threshold value for occupation numbers given. Defaulting to  0.0000E+00.
  No accuracy for fermi level given. Defaulting to  0.1000E-19.
  Maximum # of iterations to find E_F not set. Defaulting to  200.
  Preferred method for the eigenvalue solver ('KS_method') not specified in 'control.in'.
  Defaulting to serial version, LAPACK (via ELSI), since more k-points than CPUs available.
  Will not use alltoall communication since running on < 1024 CPUs.
  Threshold for basis singularities not set.
  Default threshold for basis singularities:  0.1000E-04
  partition_type (choice of integration weights) for integrals was not specified.
  | Using a version of the partition function of Stratmann and coworkers ('stratmann_sparse').
  | At each grid point, the set of atoms used to build the partition table is smoothly restricted to
  | only those atoms whose free-atom density would be non-zero at that grid point.
  Partitioning for Hartree potential was not defined. Using partition_type for integrals.
  | Adjusted default value of keyword multip_moments_threshold to:       0.10000000E-11
  | This value may affect high angular momentum components of the Hartree potential in periodic systems.
  Spin handling was not defined in control.in. Defaulting to unpolarized case.
  Angular momentum expansion for Kerker preconditioner not set explicitly.
  | Using default value of   0
  No explicit requirement for turning off preconditioner.
  | By default, it will be turned off when the charge convergence reaches
  | sc_accuracy_rho  =   0.100000E-05
  No special mixing parameter while Kerker preconditioner is on.
  Using default: charge_mix_param =     0.0500.
  No q(lm)/r^(l+1) cutoff set for long-range Hartree potential.
  | Using default value of  0.100000E-09 .
  | Verify using the multipole_threshold keyword.
  Defaulting to new monopole extrapolation.
  Density update method: automatic selection selected.
  Using density matrix based charge density update.
  Using density matrix based charge density update.
  Using packed matrix style: index .
  Defaulting to use time-reversal symmetry for k-point grid.
  Charge integration errors on the 3D integration grid will be compensated
  by explicit normalization and distribution of residual charges.
  Use the "compensate_multipole_errors" flag to change this behaviour.
  Set 'collect_eigenvectors' to be '.true.' for all serial calculations. This is mandatory.
  Set 'collect_eigenvectors' to be '.true.' for KS_method lapack_fast and serial.
 
  Consistency checks for the contents of geometry.in are next.
 

  Range separation radius for Ewald summation (hartree_convergence_parameter):      3.45918746 bohr.
  Number of empty states per atom not set in control.in - providing a guess from actual geometry.
  | Total number of empty states used during s.c.f. cycle:       11
  If you use a very high smearing, use empty_states (per atom!) in control.in to increase this value.

  Structure-dependent array size parameters: 
  | Maximum number of distinct radial functions  :       15
  | Maximum number of basis functions            :       98
  | Number of Kohn-Sham states (occupied + empty):       53
------------------------------------------------------------

************************** W A R N I N G *******************************
* You are using the PIMD wrapper. Specifications and positions         *
* in geometry.in will be IGNORED - all is received from the wrapper.   *
* Please make sure species are declared in the same order in           *
* geometry.in and wrapper input.                                       *
************************************************************************


------------------------------------------------------------
          Preparing all fixed parts of the calculation.
------------------------------------------------------------
  Determining machine precision:
    2.225073858507201E-308
  Setting up grids for atomic and cluster calculations.

  Creating wave function, potential, and density for free atoms.

  Species: Mo

  List of occupied orbitals and eigenvalues:
    n    l              occ      energy [Ha]    energy [eV]
    1    0           2.0000      -745.344654    -20281.8600
    2    0           2.0000      -103.288246     -2810.6162
    3    0           2.0000       -17.516687      -476.6533
    4    0           2.0000        -2.358559       -64.1796
    5    0           1.0000        -0.145159        -3.9500
    2    1           6.0000       -92.308627     -2511.8455
    3    1           6.0000       -13.936005      -379.2180
    4    1           6.0000        -1.408138       -38.3174
    3    2          10.0000        -8.119011      -220.9295
    4    2           5.0000        -0.132984        -3.6187


  Adding cutoff potential to free-atom effective potential.
  Creating fixed part of basis set: Ionic, confined, hydrogenic.
 
  Mo                   ion:

  List of free ionic orbitals and eigenvalues:
    n    l      energy [Ha]    energy [eV]
    1    0      -746.048685    -20301.0176
    2    0      -103.980912     -2829.4646
    3    0       -18.206601      -495.4268
    4    0        -3.040545       -82.7374
    2    1       -93.001013     -2530.6863
    3    1       -14.625827      -397.9890
    4    1        -2.084855       -56.7318
    3    2        -8.808854      -239.7011
    4    2        -0.765435       -20.8285


  List of ionic basis orbitals and eigenvalues:
    n    l      energy [Ha]    energy [eV]    outer radius [A]
    5    1        -0.465587       -12.6693       5.456393
    5    0        -0.650331       -17.6964       5.390095

 
  Mo                   hydrogenic:
 
  List of hydrogenic basis orbitals: 
    n    l      effective z      eigenvalue [eV]  inner max. [A]     outer max. [A]     outer radius [A]   
    4    3         8.400000       -60.0010           1.009788           1.009788           4.487018
    3    2         2.800000       -11.8048           1.687401           1.687401           5.456393
    5    4        12.000000       -78.3687           1.100005           1.100005           4.432498
 
  Creating atomic-like basis functions for current effective potential.

  Species Mo                  :

  List of atomic basis orbitals and eigenvalues:
    n    l      energy [Ha]    energy [eV]    outer radius [A]
    1    0      -745.344654    -20281.8600       0.247552
    2    0      -103.288246     -2810.6162       0.682864
    3    0       -17.516687      -476.6533       1.626637
    4    0        -2.358559       -64.1796       4.220963
    5    0        -0.145159        -3.9500       5.456393
    2    1       -92.308627     -2511.8455       0.699766
    3    1       -13.936005      -379.2180       1.793761
    4    1        -1.408138       -38.3174       4.828511
    3    2        -8.119011      -220.9295       2.181285
    4    2        -0.132984        -3.6187       5.390095

  Assembling full basis from fixed parts.
  | Species Mo :   atomic orbital   1 s accepted.
  | Species Mo :   atomic orbital   2 s accepted.
  | Species Mo :   atomic orbital   3 s accepted.
  | Species Mo :   atomic orbital   4 s accepted.
  | Species Mo :    ionic orbital   5 s accepted.
  | Species Mo :   atomic orbital   5 s accepted.
  | Species Mo :   atomic orbital   2 p accepted.
  | Species Mo :   atomic orbital   3 p accepted.
  | Species Mo :   atomic orbital   4 p accepted.
  | Species Mo :    ionic orbital   5 p accepted.
  | Species Mo :   atomic orbital   3 d accepted.
  | Species Mo :   atomic orbital   4 d accepted.
  | Species Mo :    hydro orbital   3 d accepted.
  | Species Mo :    hydro orbital   4 f accepted.
  | Species Mo :    hydro orbital   5 g accepted.
 
  Basis size parameters after reduction:
  | Total number of radial functions:       15
  | Total number of basis functions :       98
 
  Per-task memory consumption for arrays in subroutine allocate_ext:
  |           5.517228MB.
  Testing on-site integration grid accuracy.
  |  Species  Function  <phi|h_atom|phi> (log., in eV)  <phi|h_atom|phi> (rad., in eV)
           1        1             -20281.8599610543             -20281.8584300616
           1        2              -2810.6161812280              -2810.6161551921
           1        3               -476.6533163555               -476.6533136395
           1        4                -64.1796433667                -64.1796426456
           1        5                 -3.3691762756                 -3.3691802887
           1        6                  4.4704608512                  4.4699102345
           1        7              -2511.8455406047              -2511.8455385741
           1        8               -379.2179896350               -379.2179882338
           1        9                -38.3173891619                -38.3173886619
           1       10                  0.2493245095                  0.2492931069
           1       11               -220.9295301098               -220.9295297081
           1       12                 -3.6195697699                 -3.6195754704
           1       13                  7.1428000922                  7.1426882355
           1       14                 23.3975871087                 23.3975871819
           1       15                 50.2449608881                 50.2449608586

  Preparing densities etc. for the partition functions (integrals / Hartree potential).

  Preparations completed.
  max(cpu_time)          :      0.310 s.
  Wall clock time (cpu1) :      0.405 s.
------------------------------------------------------------

************************** W A R N I N G *******************************
* Skipping the SCF initialization for now - done inside wrapper      *
************************************************************************

  @ DRIVER MODE: Connecting to host:port localhost       12346
  @ DRIVER MODE: Message from server: STATUS      
  @ DRIVER MODE: Message from server: POSDATA     
  @ DRIVER MODE: Received positions 

------------------------------------------------------------
          Begin self-consistency loop: Initialization.

          Date     :  20210707, Time     :  091431.402
------------------------------------------------------------

  Initializing index lists of integration centers etc. from given atomic structure:
  Mapping all atomic coordinates to central unit cell.

  Initializing the k-points
  Using symmetry for reducing the k-points
  | k-points reduced from:      512 to      260
  | Number of k-points                             :       260
  The eigenvectors in the calculations are COMPLEX.
  | K-points in task   0:         1
  | K-points in task   1:         2
  | K-points in task   2:         2
  | K-points in task   3:         2
  | K-points in task   4:         2
  | K-points in task   5:         2
  | K-points in task   6:         2
  | K-points in task   7:         2
  | K-points in task   8:         2
  | K-points in task   9:         2
  | K-points in task  10:         2
  | K-points in task  11:         2
  | K-points in task  12:         2
  | K-points in task  13:         2
  | K-points in task  14:         2
  | K-points in task  15:         2
  | K-points in task  16:         2
  | K-points in task  17:         2
  | K-points in task  18:         2
  | K-points in task  19:         2
  | K-points in task  20:         2
  | K-points in task  21:         2
  | K-points in task  22:         2
  | K-points in task  23:         2
  | K-points in task  24:         2
  | K-points in task  25:         2
  | K-points in task  26:         2
  | K-points in task  27:         2
  | K-points in task  28:         2
  | K-points in task  29:         2
  | K-points in task  30:         2
  | K-points in task  31:         2
  | K-points in task  32:         2
  | K-points in task  33:         2
  | K-points in task  34:         2
  | K-points in task  35:         2
  | K-points in task  36:         2
  | K-points in task  37:         2
  | K-points in task  38:         2
  | K-points in task  39:         2
  | K-points in task  40:         2
  | K-points in task  41:         2
  | K-points in task  42:         2
  | K-points in task  43:         2
  | K-points in task  44:         2
  | K-points in task  45:         2
  | K-points in task  46:         2
  | K-points in task  47:         2
  | K-points in task  48:         2
  | K-points in task  49:         2
  | K-points in task  50:         2
  | K-points in task  51:         2
  | K-points in task  52:         2
  | K-points in task  53:         2
  | K-points in task  54:         2
  | K-points in task  55:         2
  | K-points in task  56:         2
  | K-points in task  57:         2
  | K-points in task  58:         2
  | K-points in task  59:         2
  | K-points in task  60:         2
  | K-points in task  61:         2
  | K-points in task  62:         2
  | K-points in task  63:         2
  | K-points in task  64:         2
  | K-points in task  65:         2
  | K-points in task  66:         2
  | K-points in task  67:         2
  | K-points in task  68:         2
  | K-points in task  69:         2
  | K-points in task  70:         2
  | K-points in task  71:         2
  | K-points in task  72:         2
  | K-points in task  73:         2
  | K-points in task  74:         2
  | K-points in task  75:         2
  | K-points in task  76:         2
  | K-points in task  77:         2
  | K-points in task  78:         2
  | K-points in task  79:         2
  | K-points in task  80:         2
  | K-points in task  81:         2
  | K-points in task  82:         2
  | K-points in task  83:         2
  | K-points in task  84:         2
  | K-points in task  85:         2
  | K-points in task  86:         2
  | K-points in task  87:         2
  | K-points in task  88:         2
  | K-points in task  89:         2
  | K-points in task  90:         2
  | K-points in task  91:         2
  | K-points in task  92:         2
  | K-points in task  93:         2
  | K-points in task  94:         2
  | K-points in task  95:         2
  | K-points in task  96:         2
  | K-points in task  97:         2
  | K-points in task  98:         2
  | K-points in task  99:         2
  | K-points in task 100:         2
  | K-points in task 101:         1
  | K-points in task 102:         1
  | K-points in task 103:         1
  | K-points in task 104:         1
  | K-points in task 105:         1
  | K-points in task 106:         1
  | K-points in task 107:         1
  | K-points in task 108:         1
  | K-points in task 109:         1
  | K-points in task 110:         1
  | K-points in task 111:         1
  | K-points in task 112:         1
  | K-points in task 113:         1
  | K-points in task 114:         1
  | K-points in task 115:         1
  | K-points in task 116:         1
  | K-points in task 117:         1
  | K-points in task 118:         1
  | K-points in task 119:         1
  | K-points in task 120:         1
  | K-points in task 121:         1
  | K-points in task 122:         1
  | K-points in task 123:         1
  | K-points in task 124:         1
  | K-points in task 125:         1
  | K-points in task 126:         1
  | K-points in task 127:         1
  | K-points in task 128:         1
  | K-points in task 129:         1
  | K-points in task 130:         1
  | K-points in task 131:         1
  | K-points in task 132:         1
  | K-points in task 133:         1
  | K-points in task 134:         1
  | K-points in task 135:         1
  | K-points in task 136:         1
  | K-points in task 137:         1
  | K-points in task 138:         1
  | K-points in task 139:         1
  | K-points in task 140:         1
  | K-points in task 141:         1
  | K-points in task 142:         1
  | K-points in task 143:         1
  | K-points in task 144:         1
  | K-points in task 145:         1
  | K-points in task 146:         1
  | K-points in task 147:         1
  | K-points in task 148:         1
  | K-points in task 149:         1
  | K-points in task 150:         1
  | K-points in task 151:         1
  | K-points in task 152:         1
  | K-points in task 153:         1
  | K-points in task 154:         1
  | K-points in task 155:         1
  | K-points in task 156:         1
  | K-points in task 157:         1
  | K-points in task 158:         1
  | K-points in task 159:         1
  | Number of basis functions in the Hamiltonian integrals :      4357
  | Number of basis functions in a single unit cell        :        98
  | Number of centers in hartree potential         :      1014
  | Number of centers in hartree multipole         :       700
  | Number of centers in electron density summation:       484
  | Number of centers in basis integrals           :       544
  | Number of centers in integrals                 :       145
  | Number of centers in hamiltonian               :       484
  | Consuming       1145 KiB for k_phase.
  | Number of super-cells (origin) [n_cells]                     :        2197
  | Number of super-cells (after PM_index) [n_cells]             :         282
  | Number of super-cells in hamiltonian [n_cells_in_hamiltonian]:         282
  | Size of matrix packed + index [n_hamiltonian_matrix_size] :      498887
  | Estimated reciprocal-space cutoff momentum G_max:         2.84528403 bohr^-1 .
  | Reciprocal lattice points for long-range Hartree potential:      80
  Partitioning the integration grid into batches with parallel hashing+maxmin method.
  | Number of batches:      712
  | Maximal batch size:     105
  | Minimal batch size:      49
  | Average batch size:      70.208
  | Standard deviation of batch sizes:      11.974

  Integration load balanced across   160 MPI tasks.
  Work distribution over tasks is as follows:
  Task     0 has        327 integration points.
  Task     1 has        285 integration points.
  Task     2 has        314 integration points.
  Task     3 has        305 integration points.
  Task     4 has        282 integration points.
  Task     5 has        365 integration points.
  Task     6 has        370 integration points.
  Task     7 has        277 integration points.
  Task     8 has        274 integration points.
  Task     9 has        274 integration points.
  Task    10 has        290 integration points.
  Task    11 has        334 integration points.
  Task    12 has        294 integration points.
  Task    13 has        330 integration points.
  Task    14 has        333 integration points.
  Task    15 has        365 integration points.
  Task    16 has        333 integration points.
  Task    17 has        312 integration points.
  Task    18 has        318 integration points.
  Task    19 has        285 integration points.
  Task    20 has        352 integration points.
  Task    21 has        312 integration points.
  Task    22 has        367 integration points.
  Task    23 has        287 integration points.
  Task    24 has        285 integration points.
  Task    25 has        279 integration points.
  Task    26 has        338 integration points.
  Task    27 has        340 integration points.
  Task    28 has        284 integration points.
  Task    29 has        314 integration points.
  Task    30 has        305 integration points.
  Task    31 has        286 integration points.
  Task    32 has        295 integration points.
  Task    33 has        335 integration points.
  Task    34 has        361 integration points.
  Task    35 has        331 integration points.
  Task    36 has        303 integration points.
  Task    37 has        320 integration points.
  Task    38 has        308 integration points.
  Task    39 has        320 integration points.
  Task    40 has        314 integration points.
  Task    41 has        313 integration points.
  Task    42 has        293 integration points.
  Task    43 has        315 integration points.
  Task    44 has        332 integration points.
  Task    45 has        321 integration points.
  Task    46 has        331 integration points.
  Task    47 has        363 integration points.
  Task    48 has        301 integration points.
  Task    49 has        288 integration points.
  Task    50 has        312 integration points.
  Task    51 has        348 integration points.
  Task    52 has        336 integration points.
  Task    53 has        349 integration points.
  Task    54 has        278 integration points.
  Task    55 has        339 integration points.
  Task    56 has        275 integration points.
  Task    57 has        329 integration points.
  Task    58 has        295 integration points.
  Task    59 has        291 integration points.
  Task    60 has        292 integration points.
  Task    61 has        313 integration points.
  Task    62 has        362 integration points.
  Task    63 has        277 integration points.
  Task    64 has        330 integration points.
  Task    65 has        323 integration points.
  Task    66 has        294 integration points.
  Task    67 has        287 integration points.
  Task    68 has        320 integration points.
  Task    69 has        341 integration points.
  Task    70 has        353 integration points.
  Task    71 has        286 integration points.
  Task    72 has        305 integration points.
  Task    73 has        337 integration points.
  Task    74 has        301 integration points.
  Task    75 has        314 integration points.
  Task    76 has        310 integration points.
  Task    77 has        333 integration points.
  Task    78 has        273 integration points.
  Task    79 has        314 integration points.
  Task    80 has        333 integration points.
  Task    81 has        345 integration points.
  Task    82 has        280 integration points.
  Task    83 has        339 integration points.
  Task    84 has        289 integration points.
  Task    85 has        311 integration points.
  Task    86 has        278 integration points.
  Task    87 has        288 integration points.
  Task    88 has        288 integration points.
  Task    89 has        342 integration points.
  Task    90 has        356 integration points.
  Task    91 has        305 integration points.
  Task    92 has        292 integration points.
  Task    93 has        299 integration points.
  Task    94 has        283 integration points.
  Task    95 has        289 integration points.
  Task    96 has        337 integration points.
  Task    97 has        336 integration points.
  Task    98 has        354 integration points.
  Task    99 has        335 integration points.
  Task   100 has        340 integration points.
  Task   101 has        282 integration points.
  Task   102 has        338 integration points.
  Task   103 has        310 integration points.
  Task   104 has        324 integration points.
  Task   105 has        317 integration points.
  Task   106 has        280 integration points.
  Task   107 has        281 integration points.
  Task   108 has        292 integration points.
  Task   109 has        316 integration points.
  Task   110 has        351 integration points.
  Task   111 has        277 integration points.
  Task   112 has        290 integration points.
  Task   113 has        328 integration points.
  Task   114 has        274 integration points.
  Task   115 has        294 integration points.
  Task   116 has        316 integration points.
  Task   117 has        352 integration points.
  Task   118 has        348 integration points.
  Task   119 has        292 integration points.
  Task   120 has        351 integration points.
  Task   121 has        274 integration points.
  Task   122 has        342 integration points.
  Task   123 has        276 integration points.
  Task   124 has        343 integration points.
  Task   125 has        333 integration points.
  Task   126 has        297 integration points.
  Task   127 has        314 integration points.
  Task   128 has        283 integration points.
  Task   129 has        307 integration points.
  Task   130 has        276 integration points.
  Task   131 has        290 integration points.
  Task   132 has        274 integration points.
  Task   133 has        292 integration points.
  Task   134 has        296 integration points.
  Task   135 has        280 integration points.
  Task   136 has        279 integration points.
  Task   137 has        323 integration points.
  Task   138 has        273 integration points.
  Task   139 has        275 integration points.
  Task   140 has        294 integration points.
  Task   141 has        290 integration points.
  Task   142 has        366 integration points.
  Task   143 has        354 integration points.
  Task   144 has        276 integration points.
  Task   145 has        313 integration points.
  Task   146 has        301 integration points.
  Task   147 has        330 integration points.
  Task   148 has        350 integration points.
  Task   149 has        277 integration points.
  Task   150 has        308 integration points.
  Task   151 has        334 integration points.
  Task   152 has        309 integration points.
  Task   153 has        298 integration points.
  Task   154 has        334 integration points.
  Task   155 has        344 integration points.
  Task   156 has        330 integration points.
  Task   157 has        349 integration points.
  Task   158 has        279 integration points.
  Task   159 has        316 integration points.
  Initializing partition tables, free-atom densities, potentials, etc. across the integration grid (initialize_grid_storage).
  | initialize_grid_storage: Actual outermost partition radius vs. multipole_radius_free
  | (-- VB: in principle, multipole_radius_free should be larger, hence this output)
  | Species        1: Confinement radius =              6.000000000000000 AA, multipole_radius_free =              6.016994434057369 AA.
  | Species        1: outer_partition_radius set to              6.016994434057369 AA .
  | The sparse table of interatomic distances needs       2786.85 kbyte instead of      2367.49 kbyte of memory.
  | Using the partition_type stratmann_smoother will reduce your memory usage.
  | Net number of integration points:    49988
  | of which are non-zero points    :    36760
  | Numerical average free-atom electrostatic potential    :    -32.44964846 eV
  Renormalizing the initial density to the exact electron count on the 3D integration grid.
  | Initial density: Formal number of electrons (from input files) :      84.0000000000
  | Integrated number of electrons on 3D grid     :      84.0001009334
  | Charge integration error                      :       0.0001009334
  | Normalization factor for density and gradient :       0.9999987984
  Renormalizing the free-atom superposition density to the exact electron count on the 3D integration grid.
  | Formal number of electrons (from input files) :      84.0000000000
  | Integrated number of electrons on 3D grid     :      84.0001009334
  | Charge integration error                      :       0.0001009334
  | Normalization factor for density and gradient :       0.9999987984
  Obtaining max. number of non-zero basis functions in each batch (get_n_compute_maxes).
  | Maximal number of non-zero basis functions:     1627 in task     0
  | Maximal number of non-zero basis functions:     1618 in task     1
  | Maximal number of non-zero basis functions:     1652 in task     2
  | Maximal number of non-zero basis functions:     1569 in task     3
  | Maximal number of non-zero basis functions:     1586 in task     4
  | Maximal number of non-zero basis functions:     1620 in task     5
  | Maximal number of non-zero basis functions:     1647 in task     6
  | Maximal number of non-zero basis functions:     1623 in task     7
  | Maximal number of non-zero basis functions:     1618 in task     8
  | Maximal number of non-zero basis functions:     1599 in task     9
  | Maximal number of non-zero basis functions:     1603 in task    10
  | Maximal number of non-zero basis functions:     1637 in task    11
  | Maximal number of non-zero basis functions:     1617 in task    12
  | Maximal number of non-zero basis functions:     1611 in task    13
  | Maximal number of non-zero basis functions:     1629 in task    14
  | Maximal number of non-zero basis functions:     1620 in task    15
  | Maximal number of non-zero basis functions:     1605 in task    16
  | Maximal number of non-zero basis functions:     1655 in task    17
  | Maximal number of non-zero basis functions:     1617 in task    18
  | Maximal number of non-zero basis functions:     1638 in task    19
  | Maximal number of non-zero basis functions:     1640 in task    20
  | Maximal number of non-zero basis functions:     1635 in task    21
  | Maximal number of non-zero basis functions:     1635 in task    22
  | Maximal number of non-zero basis functions:     1563 in task    23
  | Maximal number of non-zero basis functions:     1623 in task    24
  | Maximal number of non-zero basis functions:     1620 in task    25
  | Maximal number of non-zero basis functions:     1618 in task    26
  | Maximal number of non-zero basis functions:     1600 in task    27
  | Maximal number of non-zero basis functions:     1604 in task    28
  | Maximal number of non-zero basis functions:     1617 in task    29
  | Maximal number of non-zero basis functions:     1605 in task    30
  | Maximal number of non-zero basis functions:     1617 in task    31
  | Maximal number of non-zero basis functions:     1655 in task    32
  | Maximal number of non-zero basis functions:     1601 in task    33
  | Maximal number of non-zero basis functions:     1641 in task    34
  | Maximal number of non-zero basis functions:     1600 in task    35
  | Maximal number of non-zero basis functions:     1561 in task    36
  | Maximal number of non-zero basis functions:     1654 in task    37
  | Maximal number of non-zero basis functions:     1609 in task    38
  | Maximal number of non-zero basis functions:     1623 in task    39
  | Maximal number of non-zero basis functions:     1600 in task    40
  | Maximal number of non-zero basis functions:     1627 in task    41
  | Maximal number of non-zero basis functions:     1617 in task    42
  | Maximal number of non-zero basis functions:     1611 in task    43
  | Maximal number of non-zero basis functions:     1670 in task    44
  | Maximal number of non-zero basis functions:     1594 in task    45
  | Maximal number of non-zero basis functions:     1588 in task    46
  | Maximal number of non-zero basis functions:     1632 in task    47
  | Maximal number of non-zero basis functions:     1629 in task    48
  | Maximal number of non-zero basis functions:     1569 in task    49
  | Maximal number of non-zero basis functions:     1654 in task    50
  | Maximal number of non-zero basis functions:     1581 in task    51
  | Maximal number of non-zero basis functions:     1610 in task    52
  | Maximal number of non-zero basis functions:     1646 in task    53
  | Maximal number of non-zero basis functions:     1655 in task    54
  | Maximal number of non-zero basis functions:     1630 in task    55
  | Maximal number of non-zero basis functions:     1633 in task    56
  | Maximal number of non-zero basis functions:     1620 in task    57
  | Maximal number of non-zero basis functions:     1639 in task    58
  | Maximal number of non-zero basis functions:     1612 in task    59
  | Maximal number of non-zero basis functions:     1654 in task    60
  | Maximal number of non-zero basis functions:     1623 in task    61
  | Maximal number of non-zero basis functions:     1669 in task    62
  | Maximal number of non-zero basis functions:     1589 in task    63
  | Maximal number of non-zero basis functions:     1666 in task    64
  | Maximal number of non-zero basis functions:     1553 in task    65
  | Maximal number of non-zero basis functions:     1588 in task    66
  | Maximal number of non-zero basis functions:     1653 in task    67
  | Maximal number of non-zero basis functions:     1659 in task    68
  | Maximal number of non-zero basis functions:     1574 in task    69
  | Maximal number of non-zero basis functions:     1578 in task    70
  | Maximal number of non-zero basis functions:     1613 in task    71
  | Maximal number of non-zero basis functions:     1588 in task    72
  | Maximal number of non-zero basis functions:     1603 in task    73
  | Maximal number of non-zero basis functions:     1574 in task    74
  | Maximal number of non-zero basis functions:     1576 in task    75
  | Maximal number of non-zero basis functions:     1568 in task    76
  | Maximal number of non-zero basis functions:     1587 in task    77
  | Maximal number of non-zero basis functions:     1627 in task    78
  | Maximal number of non-zero basis functions:     1569 in task    79
  | Maximal number of non-zero basis functions:     1600 in task    80
  | Maximal number of non-zero basis functions:     1642 in task    81
  | Maximal number of non-zero basis functions:     1550 in task    82
  | Maximal number of non-zero basis functions:     1581 in task    83
  | Maximal number of non-zero basis functions:     1618 in task    84
  | Maximal number of non-zero basis functions:     1641 in task    85
  | Maximal number of non-zero basis functions:     1606 in task    86
  | Maximal number of non-zero basis functions:     1556 in task    87
  | Maximal number of non-zero basis functions:     1617 in task    88
  | Maximal number of non-zero basis functions:     1588 in task    89
  | Maximal number of non-zero basis functions:     1620 in task    90
  | Maximal number of non-zero basis functions:     1582 in task    91
  | Maximal number of non-zero basis functions:     1624 in task    92
  | Maximal number of non-zero basis functions:     1603 in task    93
  | Maximal number of non-zero basis functions:     1596 in task    94
  | Maximal number of non-zero basis functions:     1556 in task    95
  | Maximal number of non-zero basis functions:     1635 in task    96
  | Maximal number of non-zero basis functions:     1633 in task    97
  | Maximal number of non-zero basis functions:     1615 in task    98
  | Maximal number of non-zero basis functions:     1632 in task    99
  | Maximal number of non-zero basis functions:     1592 in task   100
  | Maximal number of non-zero basis functions:     1554 in task   101
  | Maximal number of non-zero basis functions:     1631 in task   102
  | Maximal number of non-zero basis functions:     1589 in task   103
  | Maximal number of non-zero basis functions:     1604 in task   104
  | Maximal number of non-zero basis functions:     1630 in task   105
  | Maximal number of non-zero basis functions:     1626 in task   106
  | Maximal number of non-zero basis functions:     1617 in task   107
  | Maximal number of non-zero basis functions:     1637 in task   108
  | Maximal number of non-zero basis functions:     1644 in task   109
  | Maximal number of non-zero basis functions:     1599 in task   110
  | Maximal number of non-zero basis functions:     1626 in task   111
  | Maximal number of non-zero basis functions:     1571 in task   112
  | Maximal number of non-zero basis functions:     1544 in task   113
  | Maximal number of non-zero basis functions:     1607 in task   114
  | Maximal number of non-zero basis functions:     1670 in task   115
  | Maximal number of non-zero basis functions:     1616 in task   116
  | Maximal number of non-zero basis functions:     1577 in task   117
  | Maximal number of non-zero basis functions:     1617 in task   118
  | Maximal number of non-zero basis functions:     1613 in task   119
  | Maximal number of non-zero basis functions:     1645 in task   120
  | Maximal number of non-zero basis functions:     1561 in task   121
  | Maximal number of non-zero basis functions:     1574 in task   122
  | Maximal number of non-zero basis functions:     1575 in task   123
  | Maximal number of non-zero basis functions:     1577 in task   124
  | Maximal number of non-zero basis functions:     1555 in task   125
  | Maximal number of non-zero basis functions:     1637 in task   126
  | Maximal number of non-zero basis functions:     1669 in task   127
  | Maximal number of non-zero basis functions:     1609 in task   128
  | Maximal number of non-zero basis functions:     1617 in task   129
  | Maximal number of non-zero basis functions:     1604 in task   130
  | Maximal number of non-zero basis functions:     1593 in task   131
  | Maximal number of non-zero basis functions:     1572 in task   132
  | Maximal number of non-zero basis functions:     1571 in task   133
  | Maximal number of non-zero basis functions:     1618 in task   134
  | Maximal number of non-zero basis functions:     1618 in task   135
  | Maximal number of non-zero basis functions:     1570 in task   136
  | Maximal number of non-zero basis functions:     1657 in task   137
  | Maximal number of non-zero basis functions:     1620 in task   138
  | Maximal number of non-zero basis functions:     1662 in task   139
  | Maximal number of non-zero basis functions:     1618 in task   140
  | Maximal number of non-zero basis functions:     1634 in task   141
  | Maximal number of non-zero basis functions:     1621 in task   142
  | Maximal number of non-zero basis functions:     1579 in task   143
  | Maximal number of non-zero basis functions:     1610 in task   144
  | Maximal number of non-zero basis functions:     1539 in task   145
  | Maximal number of non-zero basis functions:     1630 in task   146
  | Maximal number of non-zero basis functions:     1594 in task   147
  | Maximal number of non-zero basis functions:     1615 in task   148
  | Maximal number of non-zero basis functions:     1603 in task   149
  | Maximal number of non-zero basis functions:     1554 in task   150
  | Maximal number of non-zero basis functions:     1603 in task   151
  | Maximal number of non-zero basis functions:     1645 in task   152
  | Maximal number of non-zero basis functions:     1594 in task   153
  | Maximal number of non-zero basis functions:     1574 in task   154
  | Maximal number of non-zero basis functions:     1634 in task   155
  | Maximal number of non-zero basis functions:     1624 in task   156
  | Maximal number of non-zero basis functions:     1618 in task   157
  | Maximal number of non-zero basis functions:     1542 in task   158
  | Maximal number of non-zero basis functions:     1618 in task   159
  Allocating        0.079 MB for KS_eigenvector_complex
  Integrating Hamiltonian matrix: batch-based integration.
  Time summed over all CPUs for integration: real work       26.611 s, elapsed       32.350 s
  Integrating overlap matrix.
  Time summed over all CPUs for integration: real work       19.880 s, elapsed       24.357 s
  Decreasing sparse matrix size:
  | Tolerance:  0.1000E-12
  Hamiltonian matrix
  | Array has   357195 nonzero elements out of   498887 elements
  | Sparsity factor is 0.284
  Overlap matrix
  | Array has   331382 nonzero elements out of   498887 elements
  | Sparsity factor is 0.336
  New size of hamiltonian matrix:      358871

  Updating Kohn-Sham eigenvalues and eigenvectors using ELSI and the (modified) LAPACK eigensolver.

  Obtaining occupation numbers and chemical potential using ELSI.
  | Chemical potential (Fermi level):    -6.41276026 eV
  Writing Kohn-Sham eigenvalues.
  K-point:       1 at    0.000000    0.000000    0.000000 (in units of recip. lattice)

  State    Occupation    Eigenvalue [Ha]    Eigenvalue [eV]
      1       2.00000        -745.391515       -20283.13511
      2       2.00000        -745.391515       -20283.13511
      3       2.00000        -103.335829        -2811.91097
      4       2.00000        -103.335829        -2811.91097
      5       2.00000         -92.356150        -2513.13870
      6       2.00000         -92.356150        -2513.13870
      7       2.00000         -92.356149        -2513.13869
      8       2.00000         -92.356149        -2513.13869
      9       2.00000         -92.356149        -2513.13869
     10       2.00000         -92.356149        -2513.13869
     11       2.00000         -17.567228         -478.02860
     12       2.00000         -17.567228         -478.02860
     13       2.00000         -13.986651         -380.59613
     14       2.00000         -13.986651         -380.59613
     15       2.00000         -13.986651         -380.59613
     16       2.00000         -13.986651         -380.59613
     17       2.00000         -13.986650         -380.59612
     18       2.00000         -13.986650         -380.59612
     19       2.00000          -8.169566         -222.30520
     20       2.00000          -8.169566         -222.30519
     21       2.00000          -8.169566         -222.30519
     22       2.00000          -8.169565         -222.30517
     23       2.00000          -8.169565         -222.30517
     24       2.00000          -8.169565         -222.30517
     25       2.00000          -8.169525         -222.30410
     26       2.00000          -8.169525         -222.30409
     27       2.00000          -8.169525         -222.30409
     28       2.00000          -8.169525         -222.30408
     29       2.00000          -2.445659          -66.54976
     30       2.00000          -2.422176          -65.91077
     31       2.00000          -1.509317          -41.07062
     32       2.00000          -1.509317          -41.07062
     33       2.00000          -1.509305          -41.07027
     34       2.00000          -1.462271          -39.79041
     35       2.00000          -1.462265          -39.79025
     36       2.00000          -1.462265          -39.79025
     37       2.00000          -0.531621          -14.46614
     38       2.00000          -0.466668          -12.69870
     39       2.00000          -0.466639          -12.69790
     40       2.00000          -0.284007           -7.72822
     41       2.00000          -0.283969           -7.72718
     42       2.00000          -0.283969           -7.72718
     43       0.00000          -0.161064           -4.38277
     44       0.00000          -0.160999           -4.38100
     45       0.00000          -0.055402           -1.50756
     46       0.00000          -0.055402           -1.50756
     47       0.00000          -0.055350           -1.50614
     48       0.00000           0.105559            2.87242
     49       0.00000           0.105559            2.87242
     50       0.00000           0.105630            2.87434
     51       0.00000           0.367149            9.99063
     52       0.00000           0.367176            9.99138
     53       0.00000           0.367176            9.99138

  What follows are estimated values for band gap, HOMO, LUMO, etc.
  | They are estimated on a discrete k-point grid and not necessarily exact.
  | For converged numbers, create a DOS and/or band structure plot on a denser k-grid.

  Highest occupied state (VBM) at     -6.41872883 eV (relative to internal zero)
  | Occupation number:      1.60137754
  | K-point:     196 at    0.500000    0.375000    0.000000 (in units of recip. lattice)

  Lowest unoccupied state (CBM) at    -6.40151292 eV (relative to internal zero)
  | Occupation number:      0.11169659
  | K-point:     260 at    0.875000    0.875000    0.875000 (in units of recip. lattice)

  ESTIMATED overall HOMO-LUMO gap:      0.01721591 eV between HOMO at k-point 196 and LUMO at k-point 260
  | This appears to be an indirect band gap.
  | Smallest direct gap :      0.39264210 eV for k_point 19 at    0.000000    0.375000    0.125000 (in units of recip. lattice)
  However, this system has fractional occupation numbers. Since we use a finite k-point grid,
  this material is metallic within the approximate finite broadening function (occupation_type)
  applied to determine the occupation numbers.
  Calculating total energy contributions from superposition of free atom densities.

  Total energy components:
  | Sum of eigenvalues            :       -4936.58499997 Ha     -134331.31255122 eV
  | XC energy correction          :        -248.89020915 Ha       -6772.64717938 eV
  | XC potential correction       :         324.39531527 Ha        8827.24565372 eV
  | Free-atom electrostatic energy:       -3314.64757065 Ha      -90196.14952705 eV
  | Hartree energy correction     :           0.00000000 Ha           0.00000000 eV
  | Entropy correction            :          -0.00000386 Ha          -0.00010492 eV
  | ---------------------------
  | Total energy                  :       -8175.72746451 Ha     -222472.86360394 eV
  | Total energy, T -> 0          :       -8175.72746836 Ha     -222472.86370886 eV  <-- do not rely on this value for anything but (periodic) metals
  | Electronic free energy        :       -8175.72747222 Ha     -222472.86381379 eV

  Derived energy quantities:
  | Kinetic energy                :        8431.96646054 Ha      229445.48144894 eV
  | Electrostatic energy          :      -16358.80371590 Ha     -445145.69787350 eV
  | Energy correction for multipole
  | error in Hartree potential    :           0.00000000 Ha           0.00000000 eV
  | Sum of eigenvalues per atom                           :      -67165.65627561 eV
  | Total energy (T->0) per atom                          :     -111236.43185443 eV  <-- do not rely on this value for anything but (periodic) metals
  | Electronic free energy per atom                       :     -111236.43190689 eV
  Initialize hartree_potential_storage
  Max. number of atoms included in rho_multipole:            2

  End scf initialization - timings             :  max(cpu_time)    wall_clock(cpu1)
  | Time for scf. initialization               :        1.511 s           1.800 s
  | Boundary condition initialization          :        0.151 s           0.155 s
  | Integration                                :        0.387 s           0.412 s
  | Solution of K.-S. eqns.                    :        0.814 s           0.991 s
  | Grid partitioning                          :        0.051 s           0.056 s
  | Preloading free-atom quantities on grid    :        0.081 s           0.090 s
  | Free-atom superposition energy             :        0.009 s           0.012 s
  | Total energy evaluation                    :        0.003 s           0.014 s

  Partial memory accounting:
  | Current value for overall tracked memory usage:
  |   Minimum:        6.925 MB (on task   0)
  |   Maximum:        7.004 MB (on task   1)
  |   Average:        6.974 MB
  | Peak value for overall tracked memory usage:
  |   Minimum:       31.399 MB (on task 145 after allocating wave)
  |   Maximum:       35.004 MB (on task  44 after allocating wave)
  |   Average:       33.343 MB
  | Largest tracked array allocation so far:
  |   Minimum:       18.070 MB (hamiltonian_shell on task 145)
  |   Maximum:       21.278 MB (hamiltonian_shell on task  44)
  |   Average:       19.791 MB
  Note:  These values currently only include a subset of arrays which are explicitly tracked.
  The "true" memory usage will be greater.
------------------------------------------------------------
  Time for density update prior                :  max(cpu_time)    wall_clock(cpu1)
  | self-consistency iterative process         :        0.295 s           0.302 s
------------------------------------------------------------
Convergence:    q app. |  density  | eigen (eV) | Etot (eV) | forces (eV/A) |       CPU time |     Clock time
  SCF    1 :  0.00E+00 |  0.24E+00 |  -0.15E+02 |  0.13E+00 |             . |        0.592 s |        0.626 s
  SCF    2 :  0.00E+00 |  0.22E+00 |  -0.21E+03 |  0.93E+00 |             . |        0.547 s |        0.549 s
  SCF    3 :  0.00E+00 |  0.64E-01 |  -0.33E+01 |  0.30E-02 |             . |        0.541 s |        0.542 s
  SCF    4 :  0.00E+00 |  0.59E-01 |   0.27E+02 |  0.47E-02 |             . |        0.540 s |        0.540 s
  SCF    5 :  0.00E+00 |  0.14E-01 |   0.10E+01 |  0.23E-03 |             . |        0.540 s |        0.541 s
  SCF    6 :  0.00E+00 |  0.14E-01 |   0.20E+01 |  0.31E-04 |             . |        0.547 s |        0.547 s
  SCF    7 :  0.00E+00 |  0.49E-02 |  -0.63E+00 |  0.66E-04 |             . |        0.544 s |        0.545 s
  SCF    8 :  0.00E+00 |  0.42E-02 |   0.45E+00 |  0.23E-03 |             . |        0.541 s |        0.542 s
  SCF    9 :  0.29E-14 |  0.13E-02 |   0.68E+00 |  0.22E-04 |             . |        0.551 s |        0.552 s
  SCF   10 :  0.15E-13 |  0.88E-03 |  -0.14E+00 |  0.19E-04 |             . |        0.543 s |        0.544 s
  SCF   11 :  0.21E-14 |  0.46E-03 |   0.32E-01 |  0.18E-04 |             . |        0.543 s |        0.543 s
  SCF   12 :  0.10E-13 |  0.40E-03 |  -0.27E-01 | -0.10E-04 |             . |        0.546 s |        0.547 s
  SCF   13 :  0.97E-14 |  0.65E-04 |   0.29E-01 |  0.63E-06 |             . |        0.540 s |        0.540 s
  SCF   14 :  0.74E-14 |  0.57E-04 |   0.92E-02 | -0.23E-05 |             . |        0.542 s |        0.542 s
  SCF   15 : -0.78E-14 |  0.45E-05 |  -0.42E-04 | -0.20E-07 |             . |        0.539 s |        0.540 s
  SCF   16 :  0.14E-13 |  0.42E-05 |   0.34E-05 |  0.39E-08 |             . |        0.540 s |        0.540 s
  SCF   17 :  0.48E-14 |  0.39E-05 |  -0.48E-05 |  0.13E-07 |             . |        0.540 s |        0.540 s
  SCF   18 : -0.66E-14 |  0.35E-05 |  -0.31E-04 |  0.51E-07 |             . |        0.540 s |        0.540 s
  SCF   19 :  0.16E-13 |  0.20E-05 |  -0.19E-04 |  0.35E-07 |             . |        0.541 s |        0.541 s
  SCF   20 :  0.97E-14 |  0.10E-05 |   0.83E-05 |  0.99E-10 |             . |        0.551 s |        0.552 s
  SCF   21 : -0.12E-13 |  0.96E-06 |  -0.82E-05 |  0.55E-08 |             . |        0.543 s |        0.543 s
  SCF   22 :  0.00E+00 |  0.91E-06 |  -0.95E-04 |  0.15E-08 |      0.10E+01 |        3.927 s |        3.936 s

  Total energy components:
  | Sum of eigenvalues            :       -4943.82942495 Ha     -134528.44338461 eV
  | XC energy correction          :        -248.59321726 Ha       -6764.56561883 eV
  | XC potential correction       :         324.00509623 Ha        8816.62725341 eV
  | Free-atom electrostatic energy:       -3314.64757065 Ha      -90196.14952705 eV
  | Hartree energy correction     :           7.37685001 Ha         200.73430192 eV
  | Entropy correction            :          -0.00003082 Ha          -0.00083855 eV
  | ---------------------------
  | Total energy                  :       -8175.68826662 Ha     -222471.79697517 eV
  | Total energy, T -> 0          :       -8175.68829744 Ha     -222471.79781372 eV  <-- do not rely on this value for anything but (periodic) metals
  | Electronic free energy        :       -8175.68832825 Ha     -222471.79865226 eV

  Derived energy quantities:
  | Kinetic energy                :        8431.15689315 Ha      229423.45199919 eV
  | Electrostatic energy          :      -16358.25194251 Ha     -445130.68335553 eV
  | Energy correction for multipole
  | error in Hartree potential    :          -0.00017678 Ha          -0.00481055 eV
  | Sum of eigenvalues per atom                           :      -67264.22169231 eV
  | Total energy (T->0) per atom                          :     -111235.89890686 eV  <-- do not rely on this value for anything but (periodic) metals
  | Electronic free energy per atom                       :     -111235.89932613 eV
  What follows are estimated values for band gap, HOMO, LUMO, etc.
  | They are estimated on a discrete k-point grid and not necessarily exact.
  | For converged numbers, create a DOS and/or band structure plot on a denser k-grid.

  Highest occupied state (VBM) at     -7.22261150 eV (relative to internal zero)
  | Occupation number:      1.36189265
  | K-point:      11 at    0.000000    0.125000    0.750000 (in units of recip. lattice)

  Lowest unoccupied state (CBM) at    -7.16835434 eV (relative to internal zero)
  | Occupation number:      0.28720306
  | K-point:      12 at    0.000000    0.250000    0.000000 (in units of recip. lattice)

  ESTIMATED overall HOMO-LUMO gap:      0.05425716 eV between HOMO at k-point 11 and LUMO at k-point 12
  | This appears to be an indirect band gap.
  | Smallest direct gap :      0.38984050 eV for k_point 19 at    0.000000    0.375000    0.125000 (in units of recip. lattice)
  However, this system has fractional occupation numbers. Since we use a finite k-point grid,
  this material is metallic within the approximate finite broadening function (occupation_type)
  applied to determine the occupation numbers.

  Self-consistency cycle converged.

  Removing unitary transformations (pure translations, rotations) from forces on atoms.
  Atomic forces before filtering:
  | Net force on center of mass :  -0.271361E-06 -0.594527E-04 -0.156320E-04 eV/A
  Atomic forces after filtering:
  | Net force on center of mass :   0.000000E+00  0.217781E-19 -0.217781E-19 eV/A

  Energy and forces in a compact form:
  | Total energy uncorrected      :         -0.222471796975166E+06 eV
  | Total energy corrected        :         -0.222471797813715E+06 eV  <-- do not rely on this value for anything but (periodic) metals
  | Electronic free energy        :         -0.222471798652264E+06 eV
  Total atomic forces (unitary forces cleaned) [eV/Ang]:
  |    1         -0.738901190096990E-01          0.190577519316436E-03          0.993290404960172E-04
  |    2          0.738901190096990E-01         -0.190577519316436E-03         -0.993290404960172E-04

  Removing unitary transformations (pure translations, rotations) from forces on atoms.
  Atomic forces before filtering:
  | Net force on center of mass :   0.000000E+00  0.217781E-19 -0.217781E-19 eV/A
  Atomic forces after filtering:
  | Net force on center of mass :   0.000000E+00  0.217781E-19  0.217781E-19 eV/A
  @ DRIVER - WARNING: the stress tensor will not be computed
 ------------------------------------------------------------------------
 Atomic structure that was used in the preceding time step of the wrapper
                         x [A]             y [A]             z [A]
  lattice_vector         3.08234366        0.00000000        0.00000000
  lattice_vector         0.00000000        3.08234366        0.00000000
  lattice_vector         0.00000000        0.00000000        3.08234366

            atom         0.01000000        0.00000000        0.00000000  Mo
            atom         1.54117183        1.54117183        1.54117183  Mo
 ------------------------------------------------------------------------
  @ DRIVER MODE: Message from server: STATUS      
  @ DRIVER MODE: Message from server: GETFORCE    
  @ DRIVER MODE: Returning v,forces,stress 

------------------------------------------------------------------------------
  Final output of selected total energy values:

  The following output summarizes some interesting total energy values
  at the end of a run (AFTER all relaxation, molecular dynamics, etc.).

  | Total energy of the DFT / Hartree-Fock s.c.f. calculation      :        -222471.796975166 eV
  | Final zero-broadening corrected energy (caution - metals only) :        -222471.797813715 eV
  | For reference only, the value of 1 Hartree used in FHI-aims is :             27.211384500 eV
  | For reference only, the overall average (free atom contribution
  | + realspace contribution) of the electrostatic potential after
  | s.c.f. convergence is                                          :            -33.714738971 eV

  Before relying on these values, please be sure to understand exactly which
  total energy value is referred to by a given number. Different objects may
  all carry the same name 'total energy'. Definitions:

  Total energy of the DFT / Hartree-Fock s.c.f. calculation:
  | Note that this energy does not include ANY quantities calculated after the
  | s.c.f. cycle, in particular not ANY RPA, MP2, etc. many-body perturbation terms.

  Final zero-broadening corrected energy:
  | For metallic systems only, a broadening of the occupation numbers at the Fermi
  | level can be extrapolated back to zero broadening by an electron-gas inspired
  | formula. For all systems that are not real metals, this value can be
  | meaningless and should be avoided.

------------------------------------------------------------------------------
  Methods described in the following list of references were used in this FHI-aims run.
  If you publish the results, please make sure to cite these reference if they apply.
  FHI-aims is an academic code, and for our developers (often, Ph.D. students
  and postdocs), scientific credit in the community is essential.
  Thank you for helping us!

  For any use of FHI-aims, please cite:

    Volker Blum, Ralf Gehrke, Felix Hanke, Paula Havu, Ville Havu,
    Xinguo Ren, Karsten Reuter, and Matthias Scheffler
    'Ab initio molecular simulations with numeric atom-centered orbitals'
    Computer Physics Communications 180, 2175-2196 (2009)
    http://dx.doi.org/10.1016/j.cpc.2009.06.022


  The provided symmetry information was generated with SPGlib:

    Atsushi Togo, Yusuke Seto, Dimitar Pashov
    SPGlib 1.7.3 obtained from http://spglib.sourceforge.net
    Copyright (C) 2008 Atsushi Togo


  The ELSI infrastructure was used in your run to solve the Kohn-Sham electronic structure.
  Please check out http://elsi-interchange.org to learn more.
  If scalability is important for your project, please acknowledge ELSI by citing:

    V. W-z. Yu, F. Corsetti, A. Garcia, W. P. Huhn, M. Jacquelin, W. Jia,
    B. Lange, L. Lin, J. Lu, W. Mi, A. Seifitokaldani, A. Vazquez-Mayagoitia,
    C. Yang, H. Yang, and V. Blum
    'ELSI: A unified software interface for Kohn-Sham electronic structure solvers'
    Computer Physics Communications 222, 267-285 (2018).
    http://dx.doi.org/10.1016/j.cpc.2017.09.007


  For the real-space grid partitioning and parallelization used in this calculation, please cite:

    Ville Havu, Volker Blum, Paula Havu, and Matthias Scheffler,
    'Efficient O(N) integration for all-electron electronic structure calculation'
    'using numerically tabulated basis functions'
    Journal of Computational Physics 228, 8367-8379 (2009).
    http://dx.doi.org/10.1016/j.jcp.2009.08.008

  Of course, there are many other important community references, e.g., those cited in the
  above references. Our list is limited to references that describe implementations in the
  FHI-aims code. The reason is purely practical (length of this list) - please credit others as well.

------------------------------------------------------------
          Leaving FHI-aims.
          Date     :  20210707, Time     :  091449.113

          Computational steps:
          | Number of self-consistency cycles          :           22
          | Number of SCF (re)initializations          :            1

          Detailed time accounting                     :  max(cpu_time)    wall_clock(cpu1)
          | Total time                                 :       18.296 s          19.223 s
          | Preparation time                           :        0.310 s           0.405 s
          | Boundary condition initalization           :        0.151 s           0.155 s
          | Grid partitioning                          :        0.051 s           0.056 s
          | Preloading free-atom quantities on grid    :        0.081 s           0.090 s
          | Free-atom superposition energy             :        0.009 s           0.012 s
          | Total time for integrations                :        4.556 s           4.583 s
          | Total time for solution of K.-S. equations :        1.315 s           1.492 s
          | Total time for density & force components  :        9.511 s           9.526 s
          | Total time for mixing & preconditioning    :        0.342 s           0.341 s
          | Total time for Hartree multipole update    :        0.042 s           0.043 s
          | Total time for Hartree multipole sum       :        1.089 s           1.105 s
          | Total time for total energy evaluation     :        0.017 s           0.026 s
          | Total time for scaled ZORA corrections     :        0.000 s           0.000 s

          Partial memory accounting:
          | Residual value for overall tracked memory usage across tasks:     0.000000 MB (should be 0.000000 MB)
          | Peak values for overall tracked memory usage:
          |   Minimum:       49.653 MB (on task 145 after allocating d_wave)
          |   Maximum:       55.039 MB (on task  44 after allocating d_wave)
          |   Average:       52.566 MB
          | Largest tracked array allocation:
          |   Minimum:       18.070 MB (hamiltonian_shell on task 145)
          |   Maximum:       21.278 MB (hamiltonian_shell on task  44)
          |   Average:       19.791 MB
          Note:  These values currently only include a subset of arrays which are explicitly tracked.
          The "true" memory usage will be greater.

          Have a nice day.
------------------------------------------------------------
